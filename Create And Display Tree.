#include<stdio.h>
#include<stdlib.h>
typedef struct node
{
    int data;
    struct node *left,*right;
}NODE;

NODE *create(NODE *root)
{
     int i,n;
     NODE *temp,*newnode,*parent;
     printf("\n enetr the limit:");
     scanf("%d",&n);
     for(i=0;i<n;i++)
     {
        newnode=(NODE *)malloc(sizeof(NODE));
        printf("\n enter the value:");
        scanf("%d",&newnode->data);
        newnode->left=newnode->right=NULL;
        if(root==NULL)
        {
           root=newnode;
           continue;
        }
         temp=root;
        while(temp!=NULL)
        {
          parent=temp;
          if(newnode->data<temp->data)
           temp=temp->left;
          else
           temp=temp->right;
        }
        if(newnode->data<parent->data)
           parent->left=newnode;
        else
           parent->right=newnode;
       }
       return root;
}

void inorder(NODE *root)
{
    NODE *temp=root;
    if(temp!=NULL)
    {
       inorder(temp->left);
       printf("%d\t",temp->data);
       inorder(temp->right);
    }
}

void preorder(NODE *root)
{
     NODE *temp=root;
     if(temp!=NULL)
     {
        printf("%d\t",temp->data);
        preorder(temp->left);
        preorder(temp->right);
     }
}

void postorder(NODE *root)
{
    NODE *temp=root;
    if(temp!=NULL)
    {
       postorder(temp->left);
       postorder(temp->right);
       printf("%d\t",temp->data);
    }
}

void main()
{
    NODE *root=NULL;
    root=create(root);
    printf("\ninorder data:");
    inorder(root);
    printf("\npreorder data:");
    preorder(root);
    printf("\npostorder data:");
    postorder(root);
}
